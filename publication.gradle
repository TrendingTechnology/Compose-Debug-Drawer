task androidJavadocs(type: Javadoc) {
    failOnError(false)
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {

    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // Adds javadocs and sources as separate jars.
                artifact androidJavadocsJar
                artifact androidSourcesJar

                groupId = rootProject.ext.libraryGroupId
                artifactId = project.name
                version = rootProject.ext.libraryVersion
            }
        }
    }
}

bintray {
    user = rootProject.ext.bintrayUser
    key = rootProject.ext.bintrayToken
    publications = ['release']
    publish = true
    override = true
    pkg {
        repo = 'compose-debug-drawer'
        name = project.name
        desc = 'Compose Debug Drawer for Android composables'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/alorma/Compose-Debug-Drawer'
        publicDownloadNumbers = true
        version {
            name = rootProject.ext.libraryVersion
            released = new Date()
        }
    }
}
